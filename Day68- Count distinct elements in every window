function countDistinct(arr, k) {
    // code here
    let res=[];
    for(let i=0;i<=arr.length-k;i++){
        let set= new Set();
        for(let j=i;j<i+k;j++){
           set.add(arr[j]);
        }
        res.push(set.size);
    }
    return res;
}
// tc-O(n*k) sc-O(1)
//optimize- sliding window 


function  countDistinct(arr, k) {
    let map= new Map();
    let res=[];
    for(let i=0;i<k;i++){
        map.set(arr[i], (map.get(arr[i])||0)+1);
    }
    res.push(map.size);

    for(let i=k;i<arr.length;i++){
        map.set(arr[i-k],map.get(arr[i-k])-1);
        if(map.get(arr[i-k])===0){
            map.delete(arr[i-k]);
        }
        map.set(arr[i], (map.get(arr[i])||0)+1);
        res.push(map.size);
    }
    return res;
    }
//Time Complexity-O(n) space complexity-O(k);
console.log(countDistinct([1, 2, 1, 3, 4, 2, 3],4))
console.log(countDistinct([4,1,1],2))
console.log(countDistinct([1,1,1,1,1],3))

