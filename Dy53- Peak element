
class Solution {
    peakElement(arr) {
    //     // Code here
    //     //arr peak =
    //     //first condition will be [1,2,4,5,7,8,3] arr[0]>arr[1] peak true
    //     //else second condition if arr[i-1]>arr[i] && arr[i]>arr[i+1];
        
    //     if(arr[0]>arr[1]){
    //         return 0;
    //     }else if(arr[arr.length-1]>arr[arr.length-2]){
    //         return arr.length-1;
    //     }else{
    //       for(let i=1;i<arr.length-1;i++){
    //       if(arr[i-1]<arr[i] && arr[i]>arr[i+1]){
    //             return i;
    //         }
    //       }
    //     }
      
    // 
    // //tc - O(1+1+n)=O(n) sc-O(1)
   //Binary Search 
    let start =0;
    let end =arr.length-1;
    while(start<= end){
        let mid = Math.floor((start+end)/2);
        if((mid === 0 || arr[mid]>= arr[mid-1]) && (arr[mid] >= arr[mid+1] || mid=== arr.length-1)){
            return mid;
        }
        if(mid < arr.length-1 && arr[mid]<arr[mid+1]){
            start = mid+1;
        }else{
            high = mid-1;
        }
    }
    return -1;    
    //tc- O(logn) sc-O(1)
    }
}
